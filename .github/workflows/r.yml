# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        r-version: ['3.6.3', '4.1.1']

    steps:
      - uses: actions/checkout@v3
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@f57f1301a053485946083d7a45022b278929a78a
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
run-name: poojatp
makeCacheMatrix <- function(x = matrix()) {
    inv <- NULL
    get <- function() x
    set <- function(y) {
        x <<- y
        inv <<- NULL
    }
    getinv <- function() inv
    setinv <- function(inverse) {
        inv <<- inverse
    }
    return(list(
        set = set,
        get = get,
        getinverse = getinv,
        setinverse = setinv
    ))
}
cacheSolve <- function(x,...) {
    inverse <- x$getinverse()
    if (!is.null(inverse)) {
        return(inverse)
    }
    m <- solve(x$get())
    x$setinverse(m)
}
library(DiagrammeR)
nodes <- create_node_df(
    n = 10,
    type  = c(rep("m",5),rep('o',3),rep("c",2)),
    label = c("set","get","get inverse","set inverse","cache constructor","object in RAM","matrix","inverse matrix",
              "solve function","if not cached solve/save"),
    color = c(rep('red',5),rep('blue',3),rep('green',2))
)
edges <- create_edge_df(
    c(1,2,3,4,5,6,7,8,6,9,10),
    c(5,5,5,5,6,5,6,6,9,6,9),
    color = c(rep('red',5),rep('blue',4),rep('green',2)))
graph <- create_graph(
    nodes_df = nodes,
    edges_df = edges,attr_theme = "lr",directed = FALSE,graph_name = "Mind Map")
render_graph(graph)
